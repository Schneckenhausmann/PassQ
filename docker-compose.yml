# PassQ Password Manager Docker Compose Configuration
# This file contains both development and production-ready configurations

services:
  db:
    image: postgres:15.8-alpine
    environment:
      POSTGRES_USER: passq
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: passq
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U passq -d passq"]
      interval: 5s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/run/postgresql
  
  backend:
    build: ./backend
    ports:
      - "127.0.0.1:8080:8080"  # Bind to localhost only
    environment:
      # DATABASE CONFIGURATION
      # Development: Uses sslmode=disable for local Docker networking
      # Production: Change to sslmode=require for enforced TLS
      DATABASE_URL: postgres://passq:${POSTGRES_PASSWORD}@db:5432/passq?sslmode=disable
      
      # SECURITY KEYS (REQUIRED)
      # Generate strong random keys for production deployment
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      AUDIT_SECRET: ${AUDIT_SECRET}
      
      # OAUTH CONFIGURATION
      # Microsoft OAuth
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      MICROSOFT_REDIRECT_URI: ${MICROSOFT_REDIRECT_URI}
      
      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      
      # SMTP CONFIGURATION
      # DEVELOPMENT: Uses MailHog for local email testing
      # PRODUCTION: Replace with your real SMTP provider settings
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USERNAME: ""
      SMTP_PASSWORD: ""
      SMTP_FROM_EMAIL: noreply@passq.local
      SMTP_FROM_NAME: PassQ Password Manager
      
      # PRODUCTION SMTP EXAMPLES:
      # For Gmail with App Password:
      # SMTP_HOST: smtp.gmail.com
      # SMTP_PORT: 587
      # SMTP_USERNAME: your-email@gmail.com
      # SMTP_PASSWORD: your-app-password
      # SMTP_FROM_EMAIL: your-email@gmail.com
      # SMTP_FROM_NAME: Your Company Name
      #
      # For AWS SES:
      # SMTP_HOST: email-smtp.us-east-1.amazonaws.com
      # SMTP_PORT: 587
      # SMTP_USERNAME: your-ses-smtp-username
      # SMTP_PASSWORD: your-ses-smtp-password
      # SMTP_FROM_EMAIL: noreply@yourdomain.com
      # SMTP_FROM_NAME: Your Company Name
      #
      # For SendGrid:
      # SMTP_HOST: smtp.sendgrid.net
      # SMTP_PORT: 587
      # SMTP_USERNAME: apikey
      # SMTP_PASSWORD: your-sendgrid-api-key
      # SMTP_FROM_EMAIL: noreply@yourdomain.com
      # SMTP_FROM_NAME: Your Company Name
      #
      # IMPORTANT PRODUCTION NOTES:
      # - Always use port 587 (STARTTLS) or 465 (SSL/TLS) for production
      # - Never use port 25 or unencrypted connections
      # - The backend automatically enforces TLS for ports 587 and 465
      # - Verify your SMTP provider supports TLS encryption
      # - Use environment variables or secrets management for credentials
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "1001:1001"  # non-root user
    restart: unless-stopped
  
  frontend:
    build: ./frontend
    ports:
      - "127.0.0.1:80:80"  # Bind to localhost only
    depends_on:
      - backend
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run
    restart: unless-stopped

  # DEVELOPMENT EMAIL SERVICE
  # MailHog provides a local SMTP server for testing emails
  # PRODUCTION: Remove this service and configure real SMTP above
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP port for backend connection
      - "8025:8025"  # Web UI port for viewing emails
    restart: unless-stopped
    # PRODUCTION: Comment out or remove this entire service

volumes:
  pgdata: